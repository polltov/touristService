# Generated by Django 4.1.7 on 2023-03-23 20:05

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('additional_information_for_parsing', models.CharField(max_length=100)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(Decimal('1'))])),
                ('short_definition', models.CharField(max_length=200, verbose_name='Короткое описание')),
                ('long_definition', models.TextField(verbose_name='Длинное описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images', verbose_name='Изображение региона')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название тега')),
            ],
        ),
        migrations.CreateModel(
            name='RegionStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beauty_master_services', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Средняя цена услуги мастера в салоне красоты')),
                ('going_to_the_bath', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Поход в баню')),
                ('medical_examination', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Поход к врачу')),
                ('lunch_at_restaurant', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Средний чек в заведениях премиум класса')),
                ('lunch_at_catering', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Средний чек в заведениях общепита')),
                ('safe_rental', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Аренда сейфа')),
                ('tram_thoroughfare', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проезд в трамвае')),
                ('trolley_bus_thoroughfare', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проезд в троллейбусе')),
                ('taxi_thoroughfare', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проезд в такси')),
                ('bus_thoroughfare', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проезд в городском автобусе')),
                ('local_train_thoroughfare', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проезд в пригородном поезде')),
                ('car_rental_services', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Услуги аренды автомобилей, час')),
                ('going_to_the_cinema', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Поход в кинотеатр')),
                ('going_to_the_theater', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Поход в театр')),
                ('going_to_the_museum', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Поход в музей')),
                ('bus_tour', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Автобусная экскурсия')),
                ('sanatorium_day', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Посещение санатория (день)')),
                ('event_organizer_services', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Услуги организатора проведения торжеств')),
                ('excursion_tours', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Экскурсионные туры по России')),
                ('liter_of_alcohol', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Алкоголь (литр)')),
                ('liter_of_water', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Вода (литр)')),
                ('liter_of_soda', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Напитки газированные (литр)')),
                ('icecream', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Мороженное (килограмм)')),
                ('coffee', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Кофе (килограмм)')),
                ('tea_bags', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Чай в пакетика (25 пакетиков)')),
                ('premises_for_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Аренда помещения')),
                ('hostel_accommodation', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проживание в хостеле')),
                ('hotel_accommodation_economy', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проживание в гостинице (эконом)')),
                ('hotel_accommodation_comfort', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проживание в гостинице (комфорт)')),
                ('hotel_accommodation_lux', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Проживание в гостинице (Люкс)')),
                ('liter_of_gasoline', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Бензин (литр)')),
                ('utility_bills', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Коммунальные услуги')),
                ('book_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Стоимость книги')),
                ('gym', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Клубная карта в фитнес-клуб, месяц')),
                ('min_apartment_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Минимальная плата за аппартаменты')),
                ('max_apartment_price', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Максимальная плата за аппартаменты')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataParser.region')),
            ],
        ),
        migrations.AddField(
            model_name='region',
            name='tags',
            field=models.ManyToManyField(to='dataParser.tags'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('rating', models.IntegerField(choices=[(5, 'Отлично'), (4, 'Хорошо'), (3, 'Удовлетворительно'), (2, 'Плохо'), (1, 'Ужасно')])),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataParser.region')),
            ],
        ),
    ]
